<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">

    <Style TargetType="{x:Type xctk:DecimalUpDown}"
           x:Key="CommonDecimalUpdDown">
        <Setter Property="FormatString"
                Value="F3"></Setter>
        <Setter Property="Increment"
                Value="0.001"></Setter>
        <Setter Property="Margin"
                Value="5,5,5,0"></Setter>
    </Style>

    <Style TargetType="{x:Type xctk:DecimalUpDown}"
           x:Key="CanBeZeroDecimalUpDown"
           BasedOn="{StaticResource CommonDecimalUpdDown}">
        <Setter Property="DefaultValue" Value="0"></Setter>
        <Setter Property="DisplayDefaultValueOnEmptyText" Value="True"></Setter>
    </Style>

    
    <Style TargetType="{x:Type xctk:DecimalUpDown}"
           x:Key="CanNotBeZeroDecimalUpDown"
           BasedOn="{StaticResource CommonDecimalUpdDown}">
        <Setter Property="DefaultValue"
                Value="0.001"></Setter>
        <Setter Property="DisplayDefaultValueOnEmptyText"
                Value="True"></Setter>
    </Style>



    <Style TargetType="{x:Type UserControl}"
           x:Key="CommonUserControlStyle">
        <Setter Property="Margin"
                Value="2,2,2,2"></Setter>
    </Style>

    <Style TargetType="{x:Type Button}"
           x:Key="CommonButtonStyle">
        <Setter Property="Width"
                Value="100"></Setter>
        <Setter Property="Height"
                Value="25"></Setter>
        <Setter Property="Margin"
                Value="2,2,2,2"></Setter>
        <Setter Property="HorizontalAlignment"
                Value="Right"></Setter>
    </Style>

    <Style TargetType="{x:Type StackPanel}"
           x:Key="BottomStackPanel">
        <Setter Property="VerticalAlignment"
                Value="Bottom" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="Margin"
                Value="5,5,5,5" />
        <Setter Property="Orientation"
                Value="Horizontal" />
    </Style>

    <Style TargetType="{x:Type Label}"
           x:Key="NotSelectedStyle">
        <Setter Property="FontSize"
                Value="20" />
        <Setter Property="FontWeight"
                Value="Bold"></Setter>
    </Style>

    <Style x:Key="TreeViewItemStyle"
           TargetType="{x:Type TreeViewItem}">
        <Setter Property="IsExpanded"
                Value="True"></Setter>
        <Setter Property="IsSelected" 
                Value="{Binding IsSelected, Mode=TwoWay}" />
    </Style>

    <Style x:Key="HeaderLabelStyle"
           TargetType="{x:Type Label}">
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="Margin"
                Value="5,5,5,0" />
    </Style>

    <Style x:Key="ColorPickerCommon"
           TargetType="{x:Type xctk:ColorPicker}">
        <Setter Property="DisplayColorAndName"
                Value="False" />
        <Setter Property="UsingAlphaChannel"
                Value="False" />
    </Style>
    
    <Style x:Key="ColorPickerThemeRus"
           TargetType="{x:Type xctk:ColorPicker}"
           BasedOn="{StaticResource ColorPickerCommon}">
        <Setter Property="AvailableColorsHeader"
                Value="Доступные"></Setter>
        <Setter Property="RecentColorsHeader"
                Value="Недавно использованные"></Setter>
        <Setter Property="AdvancedButtonHeader"
                Value="Расширенный вид"></Setter>
        <Setter Property="StandardButtonHeader"
                Value="Обычный вид" />
        <Setter Property="StandardColorsHeader" 
                Value="Стандартные" />
    </Style>

    <Style TargetType="{x:Type xctk:WatermarkTextBox}"
           x:Key="LayerNameTextBoxStyle">
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"></Setter>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border BorderBrush="#FFCB2E2E"
                                BorderThickness="1"
                                Background="#11FF0000"
                                IsHitTestVisible="False"
                                x:Name="errorBorder" />
                        <AdornedElementPlaceholder x:Name="placeholder" />
                        <Popup AllowsTransparency="True"
                               HorizontalAlignment="Right"
                               HorizontalOffset="0"
                               VerticalOffset="0"
                               PopupAnimation="Fade"
                               Placement="Right"
                               PlacementTarget="{Binding ElementName=errorBorder}"
                               IsOpen="{Binding ElementName=placeholder, Path=AdornedElement.IsFocused, Mode=OneWay}">
                            <StackPanel Orientation="Horizontal">
                                <Polygon  VerticalAlignment="Center"
                                          Points="0,4 4,0 4,8"
                                          Fill="#FFCB2E2E"
                                          Stretch="Fill"
                                          Stroke="#FFCB2E2E"
                                          StrokeThickness="2" />
                                <Border Background="#FFCB2E2E"
                                        CornerRadius="4"
                                        Padding="4">
                                    <TextBlock HorizontalAlignment="Center"
                                               Foreground="White"
                                               FontWeight="Bold"
                                               Margin="2,0,0,0"
                                               Text="{Binding ElementName=placeholder, Path=AdornedElement.ToolTip, Mode=OneWay}" />
                                </Border>
                            </StackPanel>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError"
                     Value="True">
                <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="True">
                <Setter Property="ToolTip.Content"
                        Value="{x:Null}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="ToolTip.Content"
                        Value="Нельзя редактировать нулевой слой"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
